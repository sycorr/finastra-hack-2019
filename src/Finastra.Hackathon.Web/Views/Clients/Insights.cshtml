@using Finastra.Hackathon
@using Finastra.Hackathon.Finastra

@model Finastra.Hackathon.Web.Models.Insights.IndexModel

@{
    ViewData["Title"] = "Clients";
    ViewData["Active"] = "Clients";
}

<partial name="SideBar" view-data="ViewData"></partial>

<style>
    html, body {
        overflow-x: hidden;
    }
    .jumbotron {
        margin-bottom: 0px;
    }


    #side-panel ul {
        width: 100%;
        margin: 0px;
        padding: 0px;
    }

    #side-panel ul li {
        width: 100%;
        min-height: 56px;
        display: flex;
        background-color: white;
        flex-direction: row;
        align-items: center;
        box-sizing: border-box;
        padding: 0 16px;
        position: relative;
        height: inherit;
        border-left-width: 11px;
        border-left-style: solid;
        border-color: white;
        cursor: pointer;
    }

    #side-panel ul li.active {
        color: #694ed6;
        border-color: #694ed6;
    }

    #side-panel ul li.active a {
        color: #694ed6;
    }

    #side-panel ul li:hover {
        background-color: rgba(105, 78, 214, 0.04);
        border-color: rgba(105, 78, 214, 0.2);
    }

    #side-panel ul li a {
        text-decoration: none;
        color: #414141;
    }

    .side-spacer {
        min-width: 32px;
        width: 32px;
    }
</style>


@{
    var accounts = new FusionAPIClient().GetAccounts();
}

<div class="toast" style="position: absolute; top: 12px; right: 12px; z-index: 9000; width:300px ">
    <div class="toast-header">
        <strong class="mr-auto">Complete</strong>
        <small>Just Now</small>
        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="toast-body">
        <div>
            <i class="text-success fas fa-check mr-3"></i>Loan Adjustment Proposed
        </div>
        
    </div>
</div>

<div class="jumbotron fin-blue rounded-0 navpad d-flex align-items-center justify-content-between">
    <h4>Peter's Pumpkin Cannery</h4>
    <div class="dropdown">
        <button style="color: #673AB7;background-color: white;" class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <i class="fal fa-lightbulb-dollar"></i>&nbsp;Insight Actions
        </button>
        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton" x-placement="bottom-start" style="position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(22px, 38px, 0px);">
            <a id="propose-loan-adj" class="dropdown-item" href="#" onclick="proposeLoanAdjustment()">Propose loan adjustment</a>
            <a disabled class="dropdown-item disabled" href="#">Alert loan committee</a>
        </div>
    </div>
</div>

<div class="row">
    <div id="side-panel" class="col-3">
        <ul>
            <li data-route="Clients/Details">
                <div class="side-spacer noselect"><i class="fas fa-list"></i></div><a href="/Clients/Details">Details</a>
            </li>
            <li data-route="Clients/Insights" class="active">
                <div class="side-spacer noselect"><i class="far fa-lightbulb-dollar"></i></div><a href="/Clients/Insights">Insights</a>
            </li>
        </ul>
    </div>
    <div class="col-9">
        <div class="row">
            <div class="col p-3">
                <figure class="highcharts-figure">
                    <div id="chart-container" class="w-100"></div>
                </figure>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var rmadata = [
        @foreach (var ra in Model.RmaInformations)
        {
            <text>[Date.parse('@ra.Date.ToShortDateString()'), @ra.InventoryTurnover.GetValueOrDefault()],</text>
        }
    ];

    var turnoverdata = [
        @{
            var renderLast = true;
        }
        @foreach (var ra in Model.RatioAnalyses)
        {
            if (ra.TurnoverDelta > 0)
            {
                if (renderLast)
                {
                    <text>[Date.parse('@ra.Date.ToShortDateString()'), @ra.Turnover.ToString("N1")],</text>

                    if (renderLast)
                    {
                        renderLast = false;
                    }
                }
                else
                {
                    <text>[Date.parse('@ra.Date.ToShortDateString()'), null],</text>
                }
            }
            else
            {
                <text>[Date.parse('@ra.Date.ToShortDateString()'), @ra.Turnover.ToString("N1")],</text>
            }
        }
    ];

    var predictiondata = [
        @foreach (var ra in Model.RatioAnalyses)
        {
           if (ra.TurnoverDelta <= 0)
            {
                <text>[Date.parse('@ra.Date.ToShortDateString()'), null],</text>
            }
            else
            {
                <text>[Date.parse('@ra.Date.ToShortDateString()'), @ra.Turnover.ToString("N1")],</text>
            }
        }
    ];

    Highcharts.chart({
    chart: {
    	plotBackgroundColor: null,
		plotBorderWidth: 0,
		plotShadow: false,
        type: 'area',
        renderTo: 'chart-container'
    },
    credits: {
			enabled: false
		},
		exporting: {
			enabled: false
		},
		legend: {
			enabled: false
		},
		title: {
			text: 'Inventory Turnover'
    },
    subtitle: {
        text: 'NAICS Code: @Model.NaicInformation.Code',
        //align: 'right',
        //verticalAlign: 'bottom'
    },
    legend: {
        layout: 'vertical',
        align: 'left',
        verticalAlign: 'top',
        x: 100,
        y: 70,
        floating: true,
        borderWidth: 1,
        backgroundColor:
            Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'
    },
    xAxis: {
			type: 'datetime',
			dateTimeLabelFormats: {
				year: '%M %Y'
			},
			tickInterval: Date.UTC(2010, 1, 1) - Date.UTC(2010, 0, 1)
		},
    yAxis: {
        title: {
            text: 'Inventory Turnover'
        }
    },
    plotOptions: {
			series: {
				dataLabels: {
					enabled: false,
					y: 0
				}
			},
      area: {
        marker: {
          enabled: true,
          symbol: 'circle',
          radius: 3,
          states: {
            hover: {
              enabled: true
            }
          }
        }
      }
  	},
    series: [
    {
    		type: 'area',
        name: 'Historical',
        data: turnoverdata
    },
    {
        name: 'Prediction',
        data: predictiondata,
        color: '#449d44',

    },
    {
        name: 'Industry Average',
        data: rmadata,
        type: 'line',
        dashStyle: 'shortdot',
        lineWidth: 4,
        shadow: false,
        color: '#888',
        marker: {
          enabled: false,
          symbol: 'circle',
          radius: 3,
          states: {
            hover: {
             enabled: true
            }
          }
        }
    }
    ]
});

</script>